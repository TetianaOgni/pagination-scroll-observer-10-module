{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,eAMMC,EAAU,CACdC,QAAS,CACPC,cACE,6NACFC,OAAQ,qBAILC,eAAeC,EAAwBC,EAAO,GACnD,IAKE,aAJuBR,EAAAS,QAAMC,IAC3B,wEAAuDF,IACvDN,IAEcS,I,CAChB,MAAOC,GACPC,QAAQC,IAAIF,E,EAITN,eAAeS,EAAuBP,EAAO,GAClD,IAKE,aAJuBR,EAAAS,QAAMC,IAC3B,uEAAsDF,IACtDN,IAEcS,I,CAChB,MAAOC,GACPC,QAAQC,IAAIF,E,EAITN,eAAeU,EAAkBR,EAAO,GAC7C,IAKE,aAJuBR,EAAAS,QAAMC,IAC3B,mEAAkDF,IAClDN,IAEcS,I,CAChB,MAAOC,GACPC,QAAQC,IAAIF,E,EAiBTN,eAAeW,IACpBJ,QAAQC,MAER,UACyBd,EAAAS,QAAMC,IAG3B,2DACAR,GAGF,OADAW,QAAQC,IAAIH,MACLA,I,CACP,MAAOC,GACPC,QAAQC,IAAIF,E,ECtEhB,MAAMM,EAAO,CACXC,SAAUC,SAASC,cAAc,cACjCC,UAAWF,SAASC,cAAc,eAClCE,cAAeH,SAASC,cAAc,mBACtCG,YAAaJ,SAASC,cAAc,iBACpCI,iBAAkBL,SAASC,cAAc,sBAEzCK,UAAWN,SAASC,cAAc,qBAkDpC,SAASM,IACPC,qBAAqBC,MAAKlB,IACxBE,QAAQC,IAAIH,EAAK,G,CAKrB,SAASmB,EAAyBC,GAChCd,IAAyBY,MAAKlB,IAC5BE,QAAQC,IAAIH,EAAK,G,CAOrB,SAASqB,GAAaC,QAAEA,IACtBpB,QAAQC,IAAI,C,QAAEmB,IAEdf,EAAKQ,UAAUQ,UAAYD,EACxBE,KACC,EAACC,YAAEA,EAAWC,MAAEA,EAAKC,aAAEA,EAAYC,UAAEA,EAASC,aAAEA,KAC9C,wGACiEJ,WAAqBC,0HAGzDA,qJAGQE,yGAEDC,EAAaC,MAAM,EAAG,ktBAe5BH,+DAMjCI,KAAK,G,CApGVxB,EAAKC,SAASwB,iBAAiB,SAkC/B,WACE5B,IAAyBc,MAAKlB,IAC5BE,QAAQC,IAAIH,GACZqB,EAAarB,EAAK,G,IApCtBO,EAAKI,UAAUqB,iBAAiB,SA0BhC,WACEpC,IAA0BsB,MAAKlB,IAC7BE,QAAQC,IAAIH,GACZqB,EAAarB,EAAK,G,IA5BtBO,EAAKK,cAAcoB,iBAAiB,SAsCpC,WACE3B,IAAoBa,MAAKlB,IACvBE,QAAQC,IAAIH,GAEZmB,GAA0B,G,IAzC9BZ,EAAKM,YAAYmB,iBAAiB,QAAShB,GAC3CT,EAAKM,YAAYmB,iBAAiB,QAAShB,GAC3CT,EAAKO,iBAAiBkB,iBAAiB,QAASb,GAEhD,WACE,MAAMc,EAAcxB,SAASyB,iBAAiB,gBACxCC,EAAQ1B,SAASyB,iBAAiB,UAExCD,EAAYG,SAAQ,CAACC,EAAMC,KACzBD,EAAKL,iBAAiB,UAAU,KAC9B,MAGMO,EAHe9B,SAASyB,iBAC5B,gCAE+BM,OAASP,EAAYO,OAAU,IAEhEL,EAAMG,GAAOG,MAAMC,MAAQ,GAAGH,IAAa,GAC3C,G,CAINI","sources":["src/js/04-test-api.js","src/js/04-test-themovies.js"],"sourcesContent":["const KEY = 'd2aad4829db25ed52746f46f8c4574ea';\nconst API =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkMmFhZDQ4MjlkYjI1ZWQ1Mjc0NmY0NmY4YzQ1NzRlYSIsInN1YiI6IjY0NzIzZDc3OWFlNjEzMDBjNGM3NmY1NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.v_Pd0M6hpO0qy1_8-nNBGtFxbeHjE8i8mgfszlHvjZc';\n\nimport axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst options = {\n  headers: {\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkMmFhZDQ4MjlkYjI1ZWQ1Mjc0NmY0NmY4YzQ1NzRlYSIsInN1YiI6IjY0NzIzZDc3OWFlNjEzMDBjNGM3NmY1NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.v_Pd0M6hpO0qy1_8-nNBGtFxbeHjE8i8mgfszlHvjZc',\n    accept: 'application/json',\n  },\n};\n\nexport async function getTrendingMoviesByWeek(page = 4) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/week?language=en-US&page=${page}`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getTrendingMoviesByDay(page = 1) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?language=en-US&page=${page}`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getUpcomingMovies(page = 1) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/upcoming?language=en-US&page=${page}`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getSearchingMovies(page = 1) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?include_adult=false&language=en-US&page=${page}`,\n      options\n    );\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMoviesDescription() {\n  console.log();\n\n  try {\n    const response = await axios.get(\n      // `${BASE_URL}/genre/movie/list?language=en`,\n\n      `${BASE_URL}/movie/603692?language=en-US`,\n      options\n    );\n    console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// 603692;\n// import {\n//   getTrendingMoviesByDay,\n//   getTrendingMoviesByWeek,\n//   getUpcomingMovies,\n// } from './js/api';\n// const refs = {\n//   movieDay: document.querySelector('.movie-day'),\n//   movieWeek: document.querySelector('.movie-week'),\n//   movieUpcoming: document.querySelector('.movie-upcoming'),\n//   movieList: document.querySelector('.list'),\n// };\n// refs.movieDay.addEventListener('click', handlerMoviesDay);\n// refs.movieWeek.addEventListener('click', handlerMoviesWeek);\n// refs.movieUpcoming.addEventListener('click', handlerMoviesUpcoming);\n// function handlerMoviesWeek() {\n//   getTrendingMoviesByWeek().then(data => {\n//     console.log(data);\n//     markupMovies(data);\n//   });\n// }\n// function handlerMoviesDay() {\n//   getTrendingMoviesByDay().then(data => {\n//     console.log(data);\n//     markupMovies(data);\n//   });\n// }\n// function handlerMoviesUpcoming() {\n//   getUpcomingMovies().then(data => {\n//     console.log(data);\n//     markupMovies(data);\n//   });\n// }\n// function markupMovies({ results }) {\n//   refs.movieList.innerHTML = results\n//     .map(({ id, title }) => {\n//       return `\n//         <li>\n//           <div>id: ${id}</div>\n//           <div>id: ${title}</div>\n//         </li>`;\n//     })\n//     .join('');\n// }\n","import {\n  getMoviesDescription,\n  getTrendingMoviesByDay,\n  getTrendingMoviesByWeek,\n  getUpcomingMovies,\n} from './04-test-api.js';\nconst refs = {\n  movieDay: document.querySelector('.movie-day'),\n  movieWeek: document.querySelector('.movie-week'),\n  movieUpcoming: document.querySelector('.movie-upcoming'),\n  movieSearch: document.querySelector('.movie-search'),\n  movieDescription: document.querySelector('.movie-description'),\n\n  movieList: document.querySelector('.list-movie-card'),\n};\nrefs.movieDay.addEventListener('click', handlerMoviesDay);\nrefs.movieWeek.addEventListener('click', handlerMoviesWeek);\nrefs.movieUpcoming.addEventListener('click', handlerMoviesUpcoming);\nrefs.movieSearch.addEventListener('input', handlerMoviesSearch);\nrefs.movieSearch.addEventListener('click', handlerMoviesSearch);\nrefs.movieDescription.addEventListener('click', handlerMoviesDescription);\n// ---\nfunction calculateStarsWidth() {\n  const ratingItems = document.querySelectorAll('.rating-item');\n  const stars = document.querySelectorAll('.stars');\n\n  ratingItems.forEach((item, index) => {\n    item.addEventListener('change', () => {\n      const checkedItems = document.querySelectorAll(\n        'input[name=\"rating\"]:checked'\n      );\n      const percentage = (checkedItems.length / ratingItems.length) * 100;\n\n      stars[index].style.width = `${percentage}%`;\n    });\n  });\n}\n\ncalculateStarsWidth();\n\n// ---\n\nfunction handlerMoviesWeek() {\n  getTrendingMoviesByWeek().then(data => {\n    console.log(data);\n    markupMovies(data);\n  });\n}\n\nfunction handlerMoviesDay() {\n  getTrendingMoviesByDay().then(data => {\n    console.log(data);\n    markupMovies(data);\n  });\n}\nfunction handlerMoviesUpcoming() {\n  getUpcomingMovies().then(data => {\n    console.log(data);\n    // markupMovies(data);\n    handlerMoviesDescription();\n  });\n}\n\nfunction handlerMoviesSearch() {\n  getSearchingMovies().then(data => {\n    console.log(data);\n    // markup(data);\n  });\n}\n\nfunction handlerMoviesDescription(id) {\n  getMoviesDescription(id).then(data => {\n    console.log(data);\n\n    // renderMoviesInfo(data);\n    // markup(data);\n  });\n}\n\nfunction markupMovies({ results }) {\n  console.log({ results });\n\n  refs.movieList.innerHTML = results\n    .map(\n      ({ poster_path, title, vote_average, genre_ids, release_date }) =>\n        `<li class='item-movie-card'>\n    <img class='poster-movie-card' src='https://image.tmdb.org/t/p/w200${poster_path}' alt='${title}'>\n    <div class='overlay-movie-card'></div>\n    <div class='info-movie-card'>\n      <h4 class='title-movie-card'>${title}</h4>\n      <div class='wrapper-movie-card'>\n        <div class='genre-year-movie-card container'>\n          <p class='genre-movie-card span'>${genre_ids}</p>\n          <span class='divider-movie-card'>|</span>\n          <p class='year-movie-card span'>${release_date.slice(0, 4)}</p>\n        </div>\n\n        <div class=\"form-item\">\n          <div class=\"rating\">\n            <div class=\"rating-body\">\n              <div class=\"rating-active\"></div>\n              <div class=\"rating-items\">\n                <input type=\"radio\" class=\"rating-item\" value=\"1\" name=\"rating\" />\n                <input type=\"radio\" class=\"rating-item\" value=\"2\" name=\"rating\" />\n                <input type=\"radio\" class=\"rating-item\" value=\"3\" name=\"rating\" />\n                <input type=\"radio\" class=\"rating-item\" value=\"4\" name=\"rating\" />\n                <input type=\"radio\" class=\"rating-item\" value=\"5\" name=\"rating\" />\n              </div>\n            </div>\n          <div class=\"rating-value\">${vote_average}</div>\n        </div>\n      </div>\n    </div>\n  </li>`\n    )\n    .join('');\n}\n// ------------\n\n// handlerMoviesDescription(${ id })\n// function renderMoviesInfo({ genres }) {\n//   сonst movieGenreEl = document.querySelector('.genres')\n//   movieGenreEl.textContent = `${genres.name}`\n// }\n\n// function markup({ genres }) {\n//   refs.movieList.innerHTML = genres\n//     .map(({ id, name }) => {\n//       return `\n//         <li>\n//           <div>id: ${id}</div>\n//           <div>id: ${name}</div>\n//         </li>`;\n//     })\n//     .join('');\n// }\n\n// // ------из видео\n// function markupMovies({ results }) {\n//   console.log({ results });\n\n//   refs.movieList.innerHTML = results\n//     .map(\n//       ({ poster_path, title, vote_average, genre_ids, release_date }) =>\n//         `<li class='item-movie-card'>\n//     <img class='poster-movie-card' src='https://image.tmdb.org/t/p/w200${poster_path}' alt='${title}'>\n//     <div class='overlay-movie-card'></div>\n//     <div class='info-movie-card'>\n//       <h4 class='title-movie-card'>${title}</h4>\n//       <div class='wrapper-movie-card'>\n//         <div class='genre-year-movie-card container'>\n//           <p class='genre-movie-card span'>${genre_ids}</p>\n//           <span class='divider-movie-card'>|</span>\n//           <p class='year-movie-card span'>${release_date.slice(0, 4)}</p>\n//         </div>\n\n//         <div class=\"form-item\">\n//           <div class=\"rating\">\n//             <div class=\"rating-body\">\n//               <div class=\"rating-active\"></div>\n//               <div class=\"rating-items\">\n//                 <input type=\"radio\" class=\"rating-item\" value=\"1\" name=\"rating\" />\n//                 <input type=\"radio\" class=\"rating-item\" value=\"2\" name=\"rating\" />\n//                 <input type=\"radio\" class=\"rating-item\" value=\"3\" name=\"rating\" />\n//                 <input type=\"radio\" class=\"rating-item\" value=\"4\" name=\"rating\" />\n//                 <input type=\"radio\" class=\"rating-item\" value=\"5\" name=\"rating\" />\n//               </div>\n//             </div>\n//           <div class=\"rating-value\">${vote_average}</div>\n//         </div>\n//       </div>\n//     </div>\n//   </li>`\n//     )\n//     .join('');\n// }\n// -----last\n// function markupMovies({ results }) {\n//   console.log({ results });\n\n//   refs.movieList.innerHTML = results\n//     .map(\n//       ({ poster_path, title, vote_average, genre_ids, release_date }) =>\n//         `<li class='item-movie-card'>\n//     <img class='poster-movie-card' src='https://image.tmdb.org/t/p/w200${poster_path}' alt='${title}'>\n//     <div class='overlay-movie-card'></div>\n//     <div class='info-movie-card'>\n//       <h4 class='title-movie-card'>${title}</h4>\n//       <div class='wrapper-movie-card'>\n//         <div class='genre-year-movie-card container'>\n//           <p class='genre-movie-card span'>${genre_ids}</p>\n//           <span class='divider-movie-card'>|</span>\n//           <p class='year-movie-card span'>${release_date.slice(0, 4)}</p>\n//         </div>\n//         <div class='vote-movie-card'>${vote_average}</div>\n//       </div>\n//     </div>\n//   </li>`\n//     )\n//     .join('');\n// }\n// ---\n// refs.movieList.innerHTML = results\n//   .map(\n//     ({ poster_path, title, vote_average, genre_ids, release_date }) =>\n//       `<li class='movie-card'>\n//   <img class='poster-movie-card' src='https://image.tmdb.org/t/p/w200${poster_path}' alt='${title}'>\n//   <div class='overlay-movie-card'></div>\n//   <div class='info-movie-card'>\n//     <h4 class='title-movie-card'>${title}</h4>\n//     <div class='wrapper-movie-card'>\n//       <div class='genre-year-movie-card>\n//         <p class='genre-movie-card'>${genre_ids}</p>\n//         <p class='year-movie-card'>${release_date.slice(0, 4)}</p>\n//       </div>\n//       <div class='vote-movie-card'>${vote_average}</div>\n//     </div>\n//   </div>\n// </li>`\n//   )\n//   .join('');\n"],"names":["$2shzp","parcelRequire","$98587d2dd778f6a5$var$options","headers","Authorization","accept","async","$98587d2dd778f6a5$export$4b803734ecc5669c","page","default","get","data","error","console","log","$98587d2dd778f6a5$export$2b5f2e1842d7f471","$98587d2dd778f6a5$export$577747a77907970f","$98587d2dd778f6a5$export$a4c1374c48ec778","$0d8f944dbe39079a$var$refs","movieDay","document","querySelector","movieWeek","movieUpcoming","movieSearch","movieDescription","movieList","$0d8f944dbe39079a$var$handlerMoviesSearch","getSearchingMovies","then","$0d8f944dbe39079a$var$handlerMoviesDescription","id","$0d8f944dbe39079a$var$markupMovies","results","innerHTML","map","poster_path","title","vote_average","genre_ids","release_date","slice","join","addEventListener","ratingItems","querySelectorAll","stars","forEach","item","index","percentage","length","style","width","$0d8f944dbe39079a$var$calculateStarsWidth"],"version":3,"file":"04-test-api.f9f1ddd2.js.map"}