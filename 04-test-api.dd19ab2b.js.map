{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,0BAKMC,EAAW,+BACXC,EAAU,CACdC,QAAS,CACPC,cACE,6NACFC,OAAQ,qB,SAIUC,I,OAAAC,EAAuBC,MAAAC,KAAAC,U,UAAvBH,I,OAAAA,EAAfI,EAAAZ,EAAA,CAAAY,EAAAC,GAAAC,MAAA,SAAAC,I,IAAuCC,EAEpCC,EAAQC,EAAAP,U,yEAF4BK,EAAAE,EAAAC,OAAA,YAAAD,EAAA,GAAQA,EAAA,GAAD,E,kBAE1BE,EAAAC,QAAMC,IAC3B,GAAuDC,OAApDrB,EAAS,6CAAgDqB,OAALP,GACvDb,G,cAFIc,EAAQO,EAAAC,K,kBAIPR,EAASS,M,gCAEhBC,QAAQC,IAAGJ,EAAAK,I,yDAROrB,EAAuBC,MAAAC,KAAAC,U,UAYvBmB,I,OAAAC,EAAsBtB,MAAAC,KAAAC,U,UAAtBoB,I,OAAAA,EAAfnB,EAAAZ,EAAA,CAAAY,EAAAC,GAAAC,MAAA,SAAAC,I,IAAsCC,EAEnCC,EAAQC,EAAAP,U,yEAF2BK,EAAAE,EAAAC,OAAA,YAAAD,EAAA,GAAQA,EAAA,GAAD,E,kBAEzBE,EAAAC,QAAMC,IAC3B,GAAsDC,OAAnDrB,EAAS,4CAA+CqB,OAALP,GACtDb,G,cAFIc,EAAQO,EAAAC,K,kBAIPR,EAASS,M,gCAEhBC,QAAQC,IAAGJ,EAAAK,I,yDAROE,EAAsBtB,MAAAC,KAAAC,U,UAYtBqB,I,OAAAC,EAAiBxB,MAAAC,KAAAC,U,UAAjBsB,I,OAAAA,EAAfrB,EAAAZ,EAAA,CAAAY,EAAAC,GAAAC,MAAA,SAAAC,I,IAAiCC,EAE9BC,EAAQC,EAAAP,U,yEAFsBK,EAAAE,EAAAC,OAAA,YAAAD,EAAA,GAAQA,EAAA,GAAD,E,kBAEpBE,EAAAC,QAAMC,IAC3B,GAAkDC,OAA/CrB,EAAS,wCAA2CqB,OAALP,GAClDb,G,cAFIc,EAAQO,EAAAC,K,kBAIPR,EAASS,M,gCAEhBC,QAAQC,IAAGJ,EAAAK,I,yDAROI,EAAiBxB,MAAAC,KAAAC,U,UAyBjBuB,I,OAAAC,EAAoB1B,MAAAC,KAAAC,U,UAApBwB,I,OAAAA,EAAfvB,EAAAZ,EAAA,CAAAY,EAAAC,GAAAC,MAAA,SAAAC,I,yEACLY,QAAQC,M,kBAGiBR,EAAAC,QAAMC,IAG1B,GAAWC,OAATrB,EAAS,gCACZC,G,cAJYqB,EAAAC,KAMdE,QAAQC,IAAIF,M,kBACLA,M,gCAEPC,QAAQC,IAAGJ,EAAAK,I,0DAb2BpB,MAAAC,KAAAC,U,CCzD1C,IAiBQyB,EACAC,EAlBFC,EAAO,CACXC,SAAUC,SAASC,cAAc,cACjCC,UAAWF,SAASC,cAAc,eAClCE,cAAeH,SAASC,cAAc,mBACtCG,YAAaJ,SAASC,cAAc,iBACpCI,iBAAkBL,SAASC,cAAc,sBAEzCK,UAAWN,SAASC,cAAc,qBAkDpC,SAASM,IACPC,qBAAqBC,MAAK,SAAAvB,GACxBC,QAAQC,IAAIF,E,IAKhB,SAASwB,EAAyBC,GAChCjB,EAAqBiB,GAAIF,MAAK,SAAAvB,GAC5BC,QAAQC,IAAIF,E,IAOhB,SAAS0B,EAAaC,G,IAAAC,EAAAD,EAAEC,QACtB3B,QAAQC,IAAI,CAAE0B,YAEdhB,EAAKQ,UAAUS,UAAYD,EACxBE,KACC,SAAAC,G,IAAGC,EAAWD,EAAXC,YAAaC,EAAKF,EAALE,MAAOC,EAAYH,EAAZG,aAAcC,EAASJ,EAATI,UAAWC,EAAYL,EAAZK,a,MAC9C,wGACsFvC,OAArBmC,EAAY,WAGhDnC,OAHyDoC,EAAM,0HAMvDpC,OAHRoC,EAAM,qJAKCpC,OAFCsC,EAAU,yGAiBjBtC,OAfMuC,EAAaC,MAAM,EAAG,GAAG,itBAelBxC,OAAbqC,EAAa,4D,IAM9CI,KAAK,G,CApGV1B,EAAKC,SAAS0B,iBAAiB,SAkC/B,WACEnC,IAAyBmB,MAAK,SAAAvB,GAC5BC,QAAQC,IAAIF,GACZ0B,EAAa1B,E,OApCjBY,EAAKI,UAAUuB,iBAAiB,SA0BhC,WACE1D,IAA0B0C,MAAK,SAAAvB,GAC7BC,QAAQC,IAAIF,GACZ0B,EAAa1B,E,OA5BjBY,EAAKK,cAAcsB,iBAAiB,SAsCpC,WACEjC,IAAoBiB,MAAK,SAAAvB,GACvBC,QAAQC,IAAIF,GAEZwB,G,OAzCJZ,EAAKM,YAAYqB,iBAAiB,QAASlB,GAC3CT,EAAKM,YAAYqB,iBAAiB,QAASlB,GAC3CT,EAAKO,iBAAiBoB,iBAAiB,QAASf,GAGxCd,EAAcI,SAAS0B,iBAAiB,gBACxC7B,EAAQG,SAAS0B,iBAAiB,UAExC9B,EAAY+B,SAAQ,SAACC,EAAMC,GACzBD,EAAKH,iBAAiB,UAAU,WAC9B,IAGMK,EAHe9B,SAAS0B,iBAC5B,gCAE+B/C,OAASiB,EAAYjB,OAAU,IAEhEkB,EAAMgC,GAAOE,MAAMC,MAAQ,GAAcjD,OAAX+C,EAAW,I","sources":["src/js/04-test-api.js","src/js/04-test-themovies.js"],"sourcesContent":["const KEY = 'd2aad4829db25ed52746f46f8c4574ea';\nconst API =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkMmFhZDQ4MjlkYjI1ZWQ1Mjc0NmY0NmY4YzQ1NzRlYSIsInN1YiI6IjY0NzIzZDc3OWFlNjEzMDBjNGM3NmY1NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.v_Pd0M6hpO0qy1_8-nNBGtFxbeHjE8i8mgfszlHvjZc';\n\nimport axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst options = {\n  headers: {\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkMmFhZDQ4MjlkYjI1ZWQ1Mjc0NmY0NmY4YzQ1NzRlYSIsInN1YiI6IjY0NzIzZDc3OWFlNjEzMDBjNGM3NmY1NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.v_Pd0M6hpO0qy1_8-nNBGtFxbeHjE8i8mgfszlHvjZc',\n    accept: 'application/json',\n  },\n};\n\nexport async function getTrendingMoviesByWeek(page = 4) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/week?language=en-US&page=${page}`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getTrendingMoviesByDay(page = 1) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?language=en-US&page=${page}`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getUpcomingMovies(page = 1) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/upcoming?language=en-US&page=${page}`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getSearchingMovies(page = 1) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?include_adult=false&language=en-US&page=${page}`,\n      options\n    );\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMoviesDescription() {\n  console.log();\n\n  try {\n    const response = await axios.get(\n      // `${BASE_URL}/genre/movie/list?language=en`,\n\n      `${BASE_URL}/movie/603692?language=en-US`,\n      options\n    );\n    console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// 603692;\n// import {\n//   getTrendingMoviesByDay,\n//   getTrendingMoviesByWeek,\n//   getUpcomingMovies,\n// } from './js/api';\n// const refs = {\n//   movieDay: document.querySelector('.movie-day'),\n//   movieWeek: document.querySelector('.movie-week'),\n//   movieUpcoming: document.querySelector('.movie-upcoming'),\n//   movieList: document.querySelector('.list'),\n// };\n// refs.movieDay.addEventListener('click', handlerMoviesDay);\n// refs.movieWeek.addEventListener('click', handlerMoviesWeek);\n// refs.movieUpcoming.addEventListener('click', handlerMoviesUpcoming);\n// function handlerMoviesWeek() {\n//   getTrendingMoviesByWeek().then(data => {\n//     console.log(data);\n//     markupMovies(data);\n//   });\n// }\n// function handlerMoviesDay() {\n//   getTrendingMoviesByDay().then(data => {\n//     console.log(data);\n//     markupMovies(data);\n//   });\n// }\n// function handlerMoviesUpcoming() {\n//   getUpcomingMovies().then(data => {\n//     console.log(data);\n//     markupMovies(data);\n//   });\n// }\n// function markupMovies({ results }) {\n//   refs.movieList.innerHTML = results\n//     .map(({ id, title }) => {\n//       return `\n//         <li>\n//           <div>id: ${id}</div>\n//           <div>id: ${title}</div>\n//         </li>`;\n//     })\n//     .join('');\n// }\n","import {\n  getMoviesDescription,\n  getTrendingMoviesByDay,\n  getTrendingMoviesByWeek,\n  getUpcomingMovies,\n} from './04-test-api.js';\nconst refs = {\n  movieDay: document.querySelector('.movie-day'),\n  movieWeek: document.querySelector('.movie-week'),\n  movieUpcoming: document.querySelector('.movie-upcoming'),\n  movieSearch: document.querySelector('.movie-search'),\n  movieDescription: document.querySelector('.movie-description'),\n\n  movieList: document.querySelector('.list-movie-card'),\n};\nrefs.movieDay.addEventListener('click', handlerMoviesDay);\nrefs.movieWeek.addEventListener('click', handlerMoviesWeek);\nrefs.movieUpcoming.addEventListener('click', handlerMoviesUpcoming);\nrefs.movieSearch.addEventListener('input', handlerMoviesSearch);\nrefs.movieSearch.addEventListener('click', handlerMoviesSearch);\nrefs.movieDescription.addEventListener('click', handlerMoviesDescription);\n// ---\nfunction calculateStarsWidth() {\n  const ratingItems = document.querySelectorAll('.rating-item');\n  const stars = document.querySelectorAll('.stars');\n\n  ratingItems.forEach((item, index) => {\n    item.addEventListener('change', () => {\n      const checkedItems = document.querySelectorAll(\n        'input[name=\"rating\"]:checked'\n      );\n      const percentage = (checkedItems.length / ratingItems.length) * 100;\n\n      stars[index].style.width = `${percentage}%`;\n    });\n  });\n}\n\ncalculateStarsWidth();\n\n// ---\n\nfunction handlerMoviesWeek() {\n  getTrendingMoviesByWeek().then(data => {\n    console.log(data);\n    markupMovies(data);\n  });\n}\n\nfunction handlerMoviesDay() {\n  getTrendingMoviesByDay().then(data => {\n    console.log(data);\n    markupMovies(data);\n  });\n}\nfunction handlerMoviesUpcoming() {\n  getUpcomingMovies().then(data => {\n    console.log(data);\n    // markupMovies(data);\n    handlerMoviesDescription();\n  });\n}\n\nfunction handlerMoviesSearch() {\n  getSearchingMovies().then(data => {\n    console.log(data);\n    // markup(data);\n  });\n}\n\nfunction handlerMoviesDescription(id) {\n  getMoviesDescription(id).then(data => {\n    console.log(data);\n\n    // renderMoviesInfo(data);\n    // markup(data);\n  });\n}\n\nfunction markupMovies({ results }) {\n  console.log({ results });\n\n  refs.movieList.innerHTML = results\n    .map(\n      ({ poster_path, title, vote_average, genre_ids, release_date }) =>\n        `<li class='item-movie-card'>\n    <img class='poster-movie-card' src='https://image.tmdb.org/t/p/w200${poster_path}' alt='${title}'>\n    <div class='overlay-movie-card'></div>\n    <div class='info-movie-card'>\n      <h4 class='title-movie-card'>${title}</h4>\n      <div class='wrapper-movie-card'>\n        <div class='genre-year-movie-card container'>\n          <p class='genre-movie-card span'>${genre_ids}</p>\n          <span class='divider-movie-card'>|</span>\n          <p class='year-movie-card span'>${release_date.slice(0, 4)}</p>\n        </div>\n\n        <div class=\"form-item\">\n          <div class=\"rating\">\n            <div class=\"rating-body\">\n              <div class=\"rating-active\"></div>\n              <div class=\"rating-items\">\n                <input type=\"radio\" class=\"rating-item\" value=\"1\" name=\"rating\" />\n                <input type=\"radio\" class=\"rating-item\" value=\"2\" name=\"rating\" />\n                <input type=\"radio\" class=\"rating-item\" value=\"3\" name=\"rating\" />\n                <input type=\"radio\" class=\"rating-item\" value=\"4\" name=\"rating\" />\n                <input type=\"radio\" class=\"rating-item\" value=\"5\" name=\"rating\" />\n              </div>\n            </div>\n          <div class=\"rating-value\">${vote_average}</div>\n        </div>\n      </div>\n    </div>\n  </li>`\n    )\n    .join('');\n}\n// ------------\n\n// handlerMoviesDescription(${ id })\n// function renderMoviesInfo({ genres }) {\n//   сonst movieGenreEl = document.querySelector('.genres')\n//   movieGenreEl.textContent = `${genres.name}`\n// }\n\n// function markup({ genres }) {\n//   refs.movieList.innerHTML = genres\n//     .map(({ id, name }) => {\n//       return `\n//         <li>\n//           <div>id: ${id}</div>\n//           <div>id: ${name}</div>\n//         </li>`;\n//     })\n//     .join('');\n// }\n\n// // ------из видео\n// function markupMovies({ results }) {\n//   console.log({ results });\n\n//   refs.movieList.innerHTML = results\n//     .map(\n//       ({ poster_path, title, vote_average, genre_ids, release_date }) =>\n//         `<li class='item-movie-card'>\n//     <img class='poster-movie-card' src='https://image.tmdb.org/t/p/w200${poster_path}' alt='${title}'>\n//     <div class='overlay-movie-card'></div>\n//     <div class='info-movie-card'>\n//       <h4 class='title-movie-card'>${title}</h4>\n//       <div class='wrapper-movie-card'>\n//         <div class='genre-year-movie-card container'>\n//           <p class='genre-movie-card span'>${genre_ids}</p>\n//           <span class='divider-movie-card'>|</span>\n//           <p class='year-movie-card span'>${release_date.slice(0, 4)}</p>\n//         </div>\n\n//         <div class=\"form-item\">\n//           <div class=\"rating\">\n//             <div class=\"rating-body\">\n//               <div class=\"rating-active\"></div>\n//               <div class=\"rating-items\">\n//                 <input type=\"radio\" class=\"rating-item\" value=\"1\" name=\"rating\" />\n//                 <input type=\"radio\" class=\"rating-item\" value=\"2\" name=\"rating\" />\n//                 <input type=\"radio\" class=\"rating-item\" value=\"3\" name=\"rating\" />\n//                 <input type=\"radio\" class=\"rating-item\" value=\"4\" name=\"rating\" />\n//                 <input type=\"radio\" class=\"rating-item\" value=\"5\" name=\"rating\" />\n//               </div>\n//             </div>\n//           <div class=\"rating-value\">${vote_average}</div>\n//         </div>\n//       </div>\n//     </div>\n//   </li>`\n//     )\n//     .join('');\n// }\n// -----last\n// function markupMovies({ results }) {\n//   console.log({ results });\n\n//   refs.movieList.innerHTML = results\n//     .map(\n//       ({ poster_path, title, vote_average, genre_ids, release_date }) =>\n//         `<li class='item-movie-card'>\n//     <img class='poster-movie-card' src='https://image.tmdb.org/t/p/w200${poster_path}' alt='${title}'>\n//     <div class='overlay-movie-card'></div>\n//     <div class='info-movie-card'>\n//       <h4 class='title-movie-card'>${title}</h4>\n//       <div class='wrapper-movie-card'>\n//         <div class='genre-year-movie-card container'>\n//           <p class='genre-movie-card span'>${genre_ids}</p>\n//           <span class='divider-movie-card'>|</span>\n//           <p class='year-movie-card span'>${release_date.slice(0, 4)}</p>\n//         </div>\n//         <div class='vote-movie-card'>${vote_average}</div>\n//       </div>\n//     </div>\n//   </li>`\n//     )\n//     .join('');\n// }\n// ---\n// refs.movieList.innerHTML = results\n//   .map(\n//     ({ poster_path, title, vote_average, genre_ids, release_date }) =>\n//       `<li class='movie-card'>\n//   <img class='poster-movie-card' src='https://image.tmdb.org/t/p/w200${poster_path}' alt='${title}'>\n//   <div class='overlay-movie-card'></div>\n//   <div class='info-movie-card'>\n//     <h4 class='title-movie-card'>${title}</h4>\n//     <div class='wrapper-movie-card'>\n//       <div class='genre-year-movie-card>\n//         <p class='genre-movie-card'>${genre_ids}</p>\n//         <p class='year-movie-card'>${release_date.slice(0, 4)}</p>\n//       </div>\n//       <div class='vote-movie-card'>${vote_average}</div>\n//     </div>\n//   </div>\n// </li>`\n//   )\n//   .join('');\n"],"names":["$bpxeT","parcelRequire","$c9809d7e44f23c20$var$BASE_URL","$c9809d7e44f23c20$var$options","headers","Authorization","accept","$c9809d7e44f23c20$export$4b803734ecc5669c","$c9809d7e44f23c20$var$_getTrendingMoviesByWeek","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","page","response","_args","length","$dIxxU","default","get","concat","_ctx","sent","data","console","log","t0","$c9809d7e44f23c20$export$2b5f2e1842d7f471","$c9809d7e44f23c20$var$_getTrendingMoviesByDay","$c9809d7e44f23c20$export$577747a77907970f","$c9809d7e44f23c20$var$_getUpcomingMovies","$c9809d7e44f23c20$export$a4c1374c48ec778","$c9809d7e44f23c20$var$_getMoviesDescription","ratingItems","stars","$6f5f8c92e6fe6426$var$refs","movieDay","document","querySelector","movieWeek","movieUpcoming","movieSearch","movieDescription","movieList","$6f5f8c92e6fe6426$var$handlerMoviesSearch","getSearchingMovies","then","$6f5f8c92e6fe6426$var$handlerMoviesDescription","id","$6f5f8c92e6fe6426$var$markupMovies","param1","results","innerHTML","map","param","poster_path","title","vote_average","genre_ids","release_date","slice","join","addEventListener","querySelectorAll","forEach","item","index","percentage","style","width"],"version":3,"file":"04-test-api.dd19ab2b.js.map"}