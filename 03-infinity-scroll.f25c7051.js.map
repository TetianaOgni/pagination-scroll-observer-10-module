{"mappings":"YAAA,IAAMA,EAASC,SAASC,cAAc,aAEhCC,EAAW,gCACXC,EAAY,qBACZC,EAAU,mCACZC,EAAc,IAKdC,EAAW,IAAIC,sBAEnB,SAAgBC,EAASC,GACvBD,EAAQE,SAAQ,SAAAC,GACVA,EAAMC,gBAERC,EADAR,GAAe,GAEZS,MAAK,SAAAC,GACJC,EAAKC,mBAAmB,YAAaC,EAAaH,EAAKI,UACvDC,QAAQC,IAAI,GACRN,EAAKO,OAASP,EAAKQ,cACrBH,QAAQC,IAAIN,EAAKO,KAAMP,EAAKQ,aAC5Bd,EAASe,UAAUzB,G,IAGtB0B,OAAM,SAAAC,G,OAAON,QAAQC,IAAIK,E,SAnBpB,CACZC,KAAM,KACNC,WAAY,UAsBd,IAAMZ,EAAOhB,SAASC,cAAc,YAEpC,SAASY,I,IAAYS,EAAAO,UAAAC,OAAA,YAAAD,UAAA,GAAQA,UAAA,GAAD,EAC1B,OAAOE,MAAM,GAAcC,OAAX9B,GAAgC8B,OAArB7B,EAAU,aAA2B6B,OAAhB5B,EAAQ,UAAa4B,OAALV,IAAQR,MACtE,SAAAmB,GACE,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAAMF,EAAKG,YAEvB,OAAOH,EAAKI,M,IAalB,SAASnB,EAAaoB,GACpB,OAAOA,EACJC,KACC,SAAAC,G,IAAGC,EAAWD,EAAXC,YAAaC,EAAKF,EAALE,M,MACd,sDAC4DV,OAArBS,EAAY,WACjDT,OAD0DU,EAAM,gBAC1DV,OAANU,EAAM,iB,IAGXC,KAAK,G,CAjBV9B,IACGC,MAAK,SAAAC,GACJC,EAAKC,mBAAmB,YAAaC,EAAaH,EAAKI,UACvDC,QAAQC,IAAIN,GACZT,EAASsC,QAAQ7C,E,IAElB0B,OAAM,SAAAC,G,OAAON,QAAQC,IAAIK,E","sources":["src/js/03-infinity-scroll.js"],"sourcesContent":["const target = document.querySelector('.js-guard');\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst END_POINT = 'trending/movie/day';\nconst API_KEY = '345007f9ab440e5b86cef51be6397df1';\nlet currentPage = 998;\nlet options = {\n  root: null,\n  rootMargin: '200px',\n};\nlet observer = new IntersectionObserver(onLoad, options);\n\nfunction onLoad(entries, observer) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      currentPage += 1;\n      getTrending(currentPage)\n        .then(data => {\n          list.insertAdjacentHTML('beforeend', createMarkup(data.results));\n          console.log(2);\n          if (data.page === data.total_pages) {\n            console.log(data.page, data.total_pages);\n            observer.unobserve(target);\n          }\n        })\n        .catch(err => console.log(err));\n    }\n  });\n}\n\nconst list = document.querySelector('.js-list');\n\nfunction getTrending(page = 1) {\n  return fetch(`${BASE_URL}${END_POINT}?api_key=${API_KEY}&page=${page}`).then(\n    resp => {\n      if (!resp.ok) {\n        throw new Error(resp.statusText);\n      }\n      return resp.json();\n    }\n  );\n}\n\ngetTrending()\n  .then(data => {\n    list.insertAdjacentHTML('beforeend', createMarkup(data.results));\n    console.log(data);\n    observer.observe(target);\n  })\n  .catch(err => console.log(err));\n\nfunction createMarkup(arr) {\n  return arr\n    .map(\n      ({ poster_path, title }) =>\n        `<li>\n    <img src='https://image.tmdb.org/t/p/w200${poster_path}' alt='${title}'>\n    <h2>${title}</hi>\n  </li>`\n    )\n    .join('');\n}\n"],"names":["$26c5c868ccc50955$var$target","document","querySelector","$26c5c868ccc50955$var$BASE_URL","$26c5c868ccc50955$var$END_POINT","$26c5c868ccc50955$var$API_KEY","$26c5c868ccc50955$var$currentPage","$26c5c868ccc50955$var$observer","IntersectionObserver","entries","observer1","forEach","entry","isIntersecting","$26c5c868ccc50955$var$getTrending","then","data","$26c5c868ccc50955$var$list","insertAdjacentHTML","$26c5c868ccc50955$var$createMarkup","results","console","log","page","total_pages","unobserve","catch","err","root","rootMargin","arguments","length","fetch","concat","resp","ok","Error","statusText","json","arr","map","param","poster_path","title","join","observe"],"version":3,"file":"03-infinity-scroll.f25c7051.js.map"}