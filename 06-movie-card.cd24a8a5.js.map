{"mappings":"iiBAAA,I,EAAAA,EAAAC,EAAA,S,0BCAAC,EAAiBC,KAAKC,MAAM,uiBDG5B,IAIMC,EAAW,+BACXC,EAAU,CACdC,QAAS,CACPC,cACE,6NACFC,OAAQ,qB,SAGGC,I,OAAAA,EAAfC,EAAAX,EAAA,CAAAW,EAAAC,GAAAC,MAAA,SAAAC,I,IAAuCC,EAE7BC,EAAQC,EAAAC,U,yEAFqBH,EAAAE,EAAAE,OAAA,YAAAF,EAAA,GAAQA,EAAA,GAAD,E,kBAEnBG,EAAAC,QAAMC,IAC3B,GAAuDC,OAApDlB,EAAS,6CAAgDkB,OAALR,GACvDT,G,cAFIU,EAAQQ,EAAAC,KAIdC,QAAQC,IAAIX,EAASY,M,kBACdZ,EAASY,M,gCAEhBF,QAAQC,IAAGH,EAAAK,I,yDATAnB,EAAuBoB,MAAAC,KAAAb,U,CAatC,IAAMc,EAAYC,SAASC,cAAc,oBAEnCC,EAAe,GACrBxB,EAAAT,GAAOkC,OAAOC,SAAQ,SAAAC,GACpBH,EAAaG,EAAMC,IAAMD,EAAME,I,IAGjCd,QAAQC,IAAI,EAAGQ,EAAa,K,kBApBbzB,EAAuBoB,MAAAC,KAAAb,U,CAsBtCuB,GACGC,MAAK,SAAAd,GA+CiB,IAAHe,EA9ClBjB,QAAQC,IAAIC,GA8CMe,EA7CLf,EA6COe,QACtBjB,QAAQC,IAAI,CAAEgB,YAEdX,EAAUY,UAAYD,EACnBE,KAAI,SAAAC,G,IAAGC,EAAWD,EAAXC,YAAaC,EAAKF,EAALE,MAAOC,EAAYH,EAAZG,aAAcC,EAASJ,EAATI,UAAWC,EAAYL,EAAZK,aAE/CC,EAAa,GAUjB,OATIF,EAAU/B,OAAS,IAEnBiC,EADuB,IAArBF,EAAU/B,QAAgB+B,EAAUG,KAAK,MAAMlC,QAAU,GAC9CgB,EAAae,EAAU,IAEvB,GACX3B,OADcY,EAAae,EAAU,IAAI,MAE1C3B,OADCY,EAAae,EAAU,MAItB,8GACuF3B,OAArBwB,EAAY,WAGhDxB,OAHyDyB,EAAM,4IAMvDzB,OAHRyB,EAAM,6JAKCzB,OAFC6B,EAAW,0JAiBlB7B,OAfM4B,EAAaG,MAAM,EAAG,GAAG,qyBAelB/B,OAAb0B,EAAa,oF,IAMpDI,KAAK,IAKQpB,SAASsB,iBAAiB,WAElClB,SAAQ,SAAAmB,IAKlB,SAAoBA,GAClB,IAAMC,EAAeD,EAAOtB,cAAc,kBACpCwB,EAAcF,EAAOtB,cAAc,kBAK3C,SAA8BuB,EAAcE,GAC1C,IAAMC,EAAoBD,EAAS,GAAM,IACzCF,EAAaI,MAAMC,MAAQ,GAAqBvC,OAAlBqC,EAAkB,I,CALhDG,CAAqBN,EAAcC,EAAYd,U,CAR7CoB,CAAWR,E,OAjGZS,OAAM,SAAAC,G,OAAOxC,QAAQC,IAAIuC,E,IAwC5BxC,QAAQC,MAyERD,QAAQC,MAqFRD,QAAQC,K","sources":["src/js/06-movie-card.js","src/js/genres.json"],"sourcesContent":["import axios from 'axios';\nimport genres from './genres.json';\n\nconst KEY = 'd2aad4829db25ed52746f46f8c4574ea';\nconst API =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkMmFhZDQ4MjlkYjI1ZWQ1Mjc0NmY0NmY4YzQ1NzRlYSIsInN1YiI6IjY0NzIzZDc3OWFlNjEzMDBjNGM3NmY1NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.v_Pd0M6hpO0qy1_8-nNBGtFxbeHjE8i8mgfszlHvjZc';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst options = {\n  headers: {\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkMmFhZDQ4MjlkYjI1ZWQ1Mjc0NmY0NmY4YzQ1NzRlYSIsInN1YiI6IjY0NzIzZDc3OWFlNjEzMDBjNGM3NmY1NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.v_Pd0M6hpO0qy1_8-nNBGtFxbeHjE8i8mgfszlHvjZc',\n    accept: 'application/json',\n  },\n};\nasync function getTrendingMoviesByWeek(page = 4) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/week?language=en-US&page=${page}`,\n      options\n    );\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nconst movieList = document.querySelector('.list-movie-card');\n\nconst genresObject = {};\ngenres.genres.forEach(genre => {\n  genresObject[genre.id] = genre.name;\n});\n\nconsole.log(3, genresObject[37]);\n\ngetTrendingMoviesByWeek()\n  .then(data => {\n    console.log(data);\n    markupMovies(data);\n  })\n  .catch(err => console.log(err));\n// без окрашенных звезд\n// function markupMovies({ results }) {\n//   console.log({ results });\n\n//   movieList.innerHTML = results\n//     .map(\n//       ({ poster_path, title, vote_average, genre_ids, release_date }) =>\n//         `<li class='item-movie-card'>\n//     <img class='poster-movie-card' src='https://image.tmdb.org/t/p/w200${poster_path}' alt='${title}'>\n//     <div class='overlay-movie-card'></div>\n//     <div class='info-movie-card'>\n//       <h4 class='title-movie-card'>${title}</h4>\n//       <div class='wrapper-movie-card'>\n//         <div class='genre-year-movie-card'>\n//           <p class='genre-movie-card span'>${genre_ids}</p>\n//           <span class='divider-movie-card'>|</span>\n//           <p class='year-movie-card span'>${release_date.slice(0, 4)}</p>\n//         </div>\n\n//         <div class=\"form-item\">\n//           <div class=\"rating\">\n//             <div class=\"rating-body\">\n//               <div class=\"rating-active\"></div>\n//               <div class=\"rating-items\">\n//                 <input type=\"radio\" class=\"rating-item\" value=\"1\" name=\"rating\" />\n//                 <input type=\"radio\" class=\"rating-item\" value=\"2\" name=\"rating\" />\n//                 <input type=\"radio\" class=\"rating-item\" value=\"3\" name=\"rating\" />\n//                 <input type=\"radio\" class=\"rating-item\" value=\"4\" name=\"rating\" />\n//                 <input type=\"radio\" class=\"rating-item\" value=\"5\" name=\"rating\" />\n//               </div>\n//             </div>\n//           <div class=\"rating-value\">${vote_average}</div>\n//         </div>\n//       </div>\n//     </div>\n//   </li>`\n//     )\n//     .join('');\n// }\nconsole.log();\n\n// ----с окрашенными но в content: '★★★★★';\nfunction markupMovies({ results }) {\n  console.log({ results });\n\n  movieList.innerHTML = results\n    .map(({ poster_path, title, vote_average, genre_ids, release_date }) => {\n      // Дополнительный параметр genresObject\n      let genreNames = '';\n      if (genre_ids.length > 0) {\n        if (genre_ids.length === 1 || genre_ids.join(', ').length <= 20) {\n          genreNames = genresObject[genre_ids[0]];\n        } else {\n          genreNames = `${genresObject[genre_ids[0]]}, ${\n            genresObject[genre_ids[1]]\n          }`;\n        }\n      }\n      return `<li class='item-movie-card'>\n          <img class='poster-movie-card' src='https://image.tmdb.org/t/p/w200${poster_path}' alt='${title}'>\n          <div class='overlay-movie-card'></div>\n          <div class='info-movie-card'>\n            <h4 class='title-movie-card'>${title}</h4>\n            <div class='wrapper-movie-card'>\n              <div class='genre-year-movie-card'>\n                <p class='genre-movie-card span'>${genreNames}</p> <!-- Используем genreNames -->\n                <span class='divider-movie-card'>|</span>\n                <p class='year-movie-card span'>${release_date.slice(0, 4)}</p>\n              </div>\n\n              <div class=\"form-item\">\n                <div class=\"rating\">\n                  <div class=\"rating-body\">\n                    <div class=\"rating-active\"></div>\n                    <div class=\"rating-items\">\n                      <input type=\"radio\" class=\"rating-item\" value=\"1\" name=\"rating\" />\n                      <input type=\"radio\" class=\"rating-item\" value=\"2\" name=\"rating\" />\n                      <input type=\"radio\" class=\"rating-item\" value=\"3\" name=\"rating\" />\n                      <input type=\"radio\" class=\"rating-item\" value=\"4\" name=\"rating\" />\n                      <input type=\"radio\" class=\"rating-item\" value=\"5\" name=\"rating\" />\n                    </div>\n                  </div>\n                <div class=\"rating-value\">${vote_average}</div>\n              </div>\n            </div>\n          </div>\n        </li>`;\n    })\n    .join('');\n  initRatings();\n}\n\nfunction initRatings() {\n  const ratings = document.querySelectorAll('.rating');\n\n  ratings.forEach(rating => {\n    initRating(rating);\n  });\n}\n\nfunction initRating(rating) {\n  const ratingActive = rating.querySelector('.rating-active');\n  const ratingValue = rating.querySelector('.rating-value');\n\n  setRatingActiveWidth(ratingActive, ratingValue.innerHTML);\n}\n\nfunction setRatingActiveWidth(ratingActive, index) {\n  const ratingActiveWidth = (index / 10) * 100;\n  ratingActive.style.width = `${ratingActiveWidth}%`;\n}\n\nconsole.log();\n// ---- для звезд в svg\n// function markupMovies({ results }) {\n//   console.log({ results });\n\n//   movieList.innerHTML = results\n//     .map(({ poster_path, title, vote_average, genre_ids, release_date }) => {\n//       // Дополнительный параметр genresObject\n//       let genreNames = '';\n//       if (genre_ids.length > 0) {\n//         if (genre_ids.length === 1 || genre_ids.join(', ').length <= 20) {\n//           genreNames = genresObject[genre_ids[0]];\n//         } else {\n//           genreNames = `${genresObject[genre_ids[0]]}, ${\n//             genresObject[genre_ids[1]]\n//           }`;\n//         }\n//       }\n//       return `<li class='item-movie-card'>\n//           <img class='poster-movie-card' src='https://image.tmdb.org/t/p/w200${poster_path}' alt='${title}'>\n//           <div class='overlay-movie-card'></div>\n//           <div class='info-movie-card'>\n//             <h4 class='title-movie-card'>${title}</h4>\n//             <div class='wrapper-movie-card'>\n//               <div class='genre-year-movie-card'>\n//                 <p class='genre-movie-card span'>${genreNames}</p> <!-- Используем genreNames -->\n//                 <span class='divider-movie-card'>|</span>\n//                 <p class='year-movie-card span'>${release_date.slice(0, 4)}</p>\n//               </div>\n\n//               <div class=\"form-item\">\n//                 <div class=\"rating\">\n//                   <div class=\"rating-body\">\n//                     <div class=\"rating-active\"></div>\n//                     <div class=\"rating-items\">\n//                       <input type=\"radio\" class=\"rating-item\" value=\"1\" name=\"rating\" />\n//                       <input type=\"radio\" class=\"rating-item\" value=\"2\" name=\"rating\" />\n//                       <input type=\"radio\" class=\"rating-item\" value=\"3\" name=\"rating\" />\n//                       <input type=\"radio\" class=\"rating-item\" value=\"4\" name=\"rating\" />\n//                       <input type=\"radio\" class=\"rating-item\" value=\"5\" name=\"rating\" />\n//                     </div>\n//                   </div>\n//                 <div class=\"rating-value\">${vote_average}</div>\n//               </div>\n//             </div>\n//           </div>\n//         </li>`;\n//     })\n//     .join('');\n//   initRatings();\n// }\n// function initRating(rating) {\n//   const ratingActive = rating.querySelector('.rating-active');\n//   const ratingValue = rating.querySelector('.rating-value');\n\n//   setRatingActiveWidth(ratingActive, ratingValue.innerHTML);\n// }\n\n// function setRatingActiveWidth(ratingActive, index) {\n//   const ratingActiveWidth = (index / 10) * 100;\n//   ratingActive.style.width = `${ratingActiveWidth}%`;\n\n//   const starSVG = `\n//     <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n//       <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n//       <path d=\"M12 2l3.09 6.31L22 9.35l-4.42 4.29L18.64 20 12 16.42 5.36 20l1.06-6.36L2 9.35l6.91-1.04L12 2zm0 2.93l-1.76 3.57-3.91.57 2.83 2.75-.67 3.91 3.52-1.85L12 18.13l3.91 1.85-.67-3.91 2.83-2.75-3.91-.57L12 4.93z\"/>\n//     </svg>\n//   `;\n\n//   const starSVGWithSpacing = `\n//     <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n//       <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n//       <path d=\"M8.73 2.73L7.29 4.17 10.12 7l-2.83 2.83 1.41 1.41L12 9.83l2.83 2.83 1.41-1.41L13.88 7l2.83-2.83L15.83 2.73 12 6.56 8.73 2.73zm0 0\"/>\n//     </svg>\n//   `;\n\n//   const starSpacing = '<span style=\"margin-right: 4px;\"></span>';\n\n//   const starsHTML = starSVGWithSpacing.repeat(5);\n//   const filledStarsHTML = starSVG.repeat(Math.floor(index / 2));\n//   const halfStarHTML = index % 2 === 1 ? starSVGWithSpacing : '';\n\n//   ratingActive.innerHTML = `${starsHTML}${starSpacing}${filledStarsHTML}${halfStarHTML}`;\n// }\n\nconsole.log();\n\n// -------\n\n// const genresObject = genresArray.reduce((obj, genre) => {\n//   obj[genre.id] = genre.name;\n//   return obj;\n// }, {});\n\n// console.log(3, genresObject);\n\n// const genresObject = {};\n// genres.genres.forEach(genre => {\n//   genresObject[genre.id] = genre.name;\n// });\n\n// console.log(3, genresObject[37]);\n\n// function markupMovies({ results }) {\n//   console.log({ results });\n\n//   const genreMap = {\n//     // Объект с соответствиями id и name жанров\n//     28: 'Action',\n//     12: 'Adventure',\n//     16: 'Animation',\n//     35: 'Comedy',\n//     80: 'Crime',\n//     // и так далее...\n//   };\n\n//   movieList.innerHTML = results\n//     .map(\n//       ({ poster_path, title, vote_average, genre_ids, release_date }) =>\n//         `<li class='item-movie-card'>\n//           <img class='poster-movie-card' src='https://image.tmdb.org/t/p/w200${poster_path}' alt='${title}'>\n//           <div class='overlay-movie-card'></div>\n//           <div class='info-movie-card'>\n//             <h4 class='title-movie-card'>${title}</h4>\n//             <div class='wrapper-movie-card'>\n//               <div class='genre-year-movie-card'>\n//                 <p class='genre-movie-card span'>${genre_ids\n//                   .map(id => genreMap[id])\n//                   .join(', ')}</p>\n//                 <span class='divider-movie-card'>|</span>\n//                 <p class='year-movie-card span'>${release_date.slice(0, 4)}</p>\n//               </div>\n\n//               <div class=\"form-item\">\n//                 <div class=\"rating\">\n//                   <div class=\"rating-body\">\n//                     <div class=\"rating-active\"></div>\n//                     <div class=\"rating-items\">\n//                       <input type=\"radio\" class=\"rating-item\" value=\"1\" name=\"rating\" />\n//                       <input type=\"radio\" class=\"rating-item\" value=\"2\" name=\"rating\" />\n//                       <input type=\"radio\" class=\"rating-item\" value=\"3\" name=\"rating\" />\n//                       <input type=\"radio\" class=\"rating-item\" value=\"4\" name=\"rating\" />\n//                       <input type=\"radio\" class=\"rating-item\" value=\"5\" name=\"rating\" />\n//                     </div>\n//                   </div>\n//                 <div class=\"rating-value\">${vote_average}</div>\n//               </div>\n//             </div>\n//           </div>\n//         </li>`\n//     )\n//     .join('');\n// }\n","{\n  \"genres\": [\n    {\n      \"id\": 28,\n      \"name\": \"Action\"\n    },\n    {\n      \"id\": 12,\n      \"name\": \"Adventure\"\n    },\n    {\n      \"id\": 16,\n      \"name\": \"Animation\"\n    },\n    {\n      \"id\": 35,\n      \"name\": \"Comedy\"\n    },\n    {\n      \"id\": 80,\n      \"name\": \"Crime\"\n    },\n    {\n      \"id\": 99,\n      \"name\": \"Documentary\"\n    },\n    {\n      \"id\": 18,\n      \"name\": \"Drama\"\n    },\n    {\n      \"id\": 10751,\n      \"name\": \"Family\"\n    },\n    {\n      \"id\": 14,\n      \"name\": \"Fantasy\"\n    },\n    {\n      \"id\": 36,\n      \"name\": \"History\"\n    },\n    {\n      \"id\": 27,\n      \"name\": \"Horror\"\n    },\n    {\n      \"id\": 10402,\n      \"name\": \"Music\"\n    },\n    {\n      \"id\": 9648,\n      \"name\": \"Mystery\"\n    },\n    {\n      \"id\": 10749,\n      \"name\": \"Romance\"\n    },\n    {\n      \"id\": 878,\n      \"name\": \"Science Fiction\"\n    },\n    {\n      \"id\": 10770,\n      \"name\": \"TV Movie\"\n    },\n    {\n      \"id\": 53,\n      \"name\": \"Thriller\"\n    },\n    {\n      \"id\": 10752,\n      \"name\": \"War\"\n    },\n    {\n      \"id\": 37,\n      \"name\": \"Western\"\n    }\n  ]\n}\n"],"names":["$bpxeT","parcelRequire","$0b1f61b1d1b5471b$exports","JSON","parse","$04c906cb920249a1$var$BASE_URL","$04c906cb920249a1$var$options","headers","Authorization","accept","$04c906cb920249a1$var$_getTrendingMoviesByWeek","$parcel$interopDefault","$2TvXO","mark","_callee","page","response","_args","arguments","length","$dIxxU","default","get","concat","_ctx","sent","console","log","data","t0","apply","this","$04c906cb920249a1$var$movieList","document","querySelector","$04c906cb920249a1$var$genresObject","genres","forEach","genre","id","name","$04c906cb920249a1$var$getTrendingMoviesByWeek","then","results","innerHTML","map","param","poster_path","title","vote_average","genre_ids","release_date","genreNames","join","slice","querySelectorAll","rating","ratingActive","ratingValue","index","ratingActiveWidth","style","width","$04c906cb920249a1$var$setRatingActiveWidth","$04c906cb920249a1$var$initRating","catch","err"],"version":3,"file":"06-movie-card.cd24a8a5.js.map"}